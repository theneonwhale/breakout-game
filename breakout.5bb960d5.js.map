{"version":3,"sources":["js/breakout.js"],"names":["canvas","document","getElementById","ctx","getContext","x","width","y","height","dx","dy","ballRadius","paddleHeight","paddleWidth","paddleX","rightPressed","leftPressed","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","score","lives","bricks","c","r","status","drawBricks","brickX","brickY","beginPath","rect","fill","closePath","drawBall","arc","Math","PI","draw","clearRect","drawPaddle","drawScore","drawLives","collisionDetection","randomColorRGB","alert","location","reload","requestAnimationFrame","random","min","max","round","g","b","fillStyle","mouseMoveHandler","e","relativeX","clientX","offsetLeft","keyDownHandler","keyCode","keyUpHandler","font","fillText","addEventListener"],"mappings":"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","file":"breakout.5bb960d5.js","sourceRoot":"../src","sourcesContent":["//canvas and ball\nconst canvas = document.getElementById('myCanvas');\nconst ctx = canvas.getContext('2d');\nlet x = canvas.width / 2;\nlet y = canvas.height - 30;\nlet dx = 2;\nlet dy = -2;\nconst ballRadius = 10;\n// const randomColor = randomColorRGB();\n\n//paddle\nconst paddleHeight = 10;\nconst paddleWidth = 70;\nlet paddleX = (canvas.width - paddleWidth) / 2;\nlet rightPressed = false;\nlet leftPressed = false;\n\n//bricks\nlet brickRowCount = 4;\nlet brickColumnCount = 5;\nlet brickWidth = 75;\nlet brickHeight = 20;\nlet brickPadding = 10;\nlet brickOffsetTop = 30;\nlet brickOffsetLeft = 30;\n\n//score\nlet score = 0;\n\n//lives\nlet lives = 3;\n\nlet bricks = [];\nfor (let c = 0; c < brickColumnCount; c += 1) {\n  bricks[c] = [];\n  for (let r = 0; r < brickRowCount; r += 1) {\n    bricks[c][r] = { x: 0, y: 0, status: 1 };\n  }\n}\n\nfunction drawBricks() {\n  for (let c = 0; c < brickColumnCount; c += 1) {\n    for (let r = 0; r < brickRowCount; r += 1) {\n      if (bricks[c][r].status == 1) {\n        let brickX = c * (brickWidth + brickPadding) + brickOffsetLeft;\n        let brickY = r * (brickHeight + brickPadding) + brickOffsetTop;\n        bricks[c][r].x = brickX;\n        bricks[c][r].y = brickY;\n        ctx.beginPath();\n        ctx.rect(brickX, brickY, brickWidth, brickHeight);\n        // ctx.fillStyle = \"#0095DD\";\n        ctx.fill();\n        ctx.closePath();\n      }\n    }\n  }\n}\n\n//ball\nfunction drawBall() {\n  ctx.beginPath();\n  ctx.arc(x, y, ballRadius, 0, Math.PI * 2);\n  // ctx.fillStyle = randomColor;\n  ctx.fill();\n  ctx.closePath();\n}\n\nfunction draw() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  drawBricks();\n  drawBall();\n  drawPaddle();\n  drawScore();\n  drawLives();\n  collisionDetection();\n\n  if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\n    dx = -dx;\n    randomColorRGB();\n  }\n\n  if (y + dy < ballRadius) {\n    dy = -dy;\n    randomColorRGB();\n  } else if (y + dy > canvas.height - ballRadius) {\n    if (x > paddleX && x < paddleX + paddleWidth) {\n      // dy += 1;\n      dy = -dy;\n    } else {\n      lives -= 1;\n      if (!lives) {\n        alert('GAME OVER');\n        document.location.reload();\n        // clearInterval(intervalId);\n      } else {\n        x = canvas.width / 2;\n        y = canvas.height - 30;\n        dx = 2;\n        dy = -2;\n        paddleX = (canvas.width - paddleWidth) / 2;\n      }\n    }\n  }\n\n  x += dx;\n  y += dy;\n\n  if (rightPressed && paddleX < canvas.width - paddleWidth) {\n    paddleX += 6;\n  } else if (leftPressed && paddleX > 0) {\n    paddleX -= 6;\n  }\n  requestAnimationFrame(draw);\n}\n\n//paddle\nfunction drawPaddle() {\n  ctx.beginPath();\n  ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);\n  // randomColor;\n  ctx.fill();\n  ctx.closePath();\n}\n\nfunction randomColorRGB() {\n  const random = (min, max) => Math.round(Math.random() * (max - min) + min);\n\n  const r = random(0, 255);\n  const g = random(0, 255);\n  const b = random(0, 255);\n\n  ctx.fillStyle = `rgb(${r},${g},${b})`;\n\n  // return `rgb(${r},${g},${b})`;\n}\n\ndocument.addEventListener('keydown', keyDownHandler, false);\ndocument.addEventListener('keyup', keyUpHandler, false);\ndocument.addEventListener('mousemove', mouseMoveHandler, false);\n\nfunction mouseMoveHandler(e) {\n  let relativeX = e.clientX - canvas.offsetLeft;\n  if (relativeX > 0 && relativeX < canvas.width) {\n    paddleX = relativeX - paddleWidth / 2;\n  }\n}\n\nfunction keyDownHandler(e) {\n  if (e.keyCode == 39) {\n    rightPressed = true;\n  } else if (e.keyCode == 37) {\n    leftPressed = true;\n  }\n}\n\nfunction keyUpHandler(e) {\n  if (e.keyCode == 39) {\n    rightPressed = false;\n  } else if (e.keyCode == 37) {\n    leftPressed = false;\n  }\n}\n\nfunction collisionDetection() {\n  for (let c = 0; c < brickColumnCount; c += 1) {\n    for (let r = 0; r < brickRowCount; r += 1) {\n      var b = bricks[c][r];\n      if (b.status == 1) {\n        if (\n          x > b.x &&\n          x < b.x + brickWidth &&\n          y > b.y &&\n          y < b.y + brickHeight\n        ) {\n          dy = -dy;\n          b.status = 0;\n\n          score += 5;\n          randomColorRGB();\n\n          if (score == brickRowCount * brickColumnCount * 5) {\n            alert(`YOU WIN, CONGRATULATIONS! YOUR SCORE IS ${score} POINTS.`);\n            document.location.reload();\n            // clearInterval(intervalId);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction drawScore() {\n  ctx.font = '16px Arial';\n  // ctx.fillStyle = '#0095DD';\n  ctx.fillText('Score: ' + score, 8, 20);\n}\n\nfunction drawLives() {\n  ctx.font = '16px Arial';\n  // ctx.fillStyle = '#0095DD';\n  ctx.fillText('Lives: ' + lives, canvas.width - 65, 20);\n}\n\n// const intervalId = setInterval(draw, 10);\ndraw();\n"]}